
R version 3.4.1 (2017-06-30) -- "Single Candle"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## ------------------------------------------------------------------------------------------------ ##
> ## ------------------------------------------------------------------------------------------------ ##
> ## 01a_parse_trials.R ; Author: Ben Berger;                               
> ## Modified from script by Andrew Marder:                              
> ##
> ## Parses JSON columns from trials.csv (from cortellis API) as dataframes in long form. 
> ## 
> ##
> ## Original notes from AM:                                             
> ## I've written a function called `my_expand` to make working with the 
> ## trials data a little bit easier. The `get_name`, `assert`, and      
> ## `json_to_dataframe` functions are helper functions that I used to   
> ## write the `my_expand` function.                                     
> ##
> ## ------------------------------------------------------------------------------------------------ ##
> ## ------------------------------------------------------------------------------------------------ ##
> 
> ## Load packages 
> library(dplyr) 

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(rlang)
> library(readr)
> library(tidyr)
> library(haven)
> 
> ## ------------------------------------------------------------------------------------------------ ##
> ##  Define functions
> ## ------------------------------------------------------------------------------------------------ ##
> assert <- stopifnot
> get_name <- function(x) as.character(UQE(x))
> 
> 
> ## Parse a JSON cell as a tibble (data_frame)
> json_to_dataframe <- function(s, varname) {
+   l <- jsonlite::fromJSON(s)
+   assert(class(l) == "list")
+   if(length(l) == 1) data <- l[[1]]
+   else data <- l
+   
+   if (class(data) == "data.frame") {
+     return(data)
+   }
+   else {
+     data2 <- data.frame(data)
+     if(length(names(data)) == 0) names(data2) <- varname
+     else names(data2) <- names(data)
+     # next few lines are some test code for getting country data
+     # if(varname == '~SitesByCountries'){
+     #    data2$site_subdivision_code <- data2[['Sites.Site.CountrySubDivision']][['@code']]
+     #    data2$site_subdivision_name <- data2[['Sites.Site.CountrySubDivision']][['$']]
+     #    data2[['Sites.Site.CountrySubDivision']] <- NULL
+     # }
+     
+     return(data2)
+   }
+ }
> 
> #Parse Geographic Data Column: 
> json_to_dataframe_geodata <- function(s) {
+   l <- jsonlite::fromJSON(s)
+   assert(class(l) == "list")
+   if(length(l) == 1) data <- l[[1]]
+   else data <- l
+ 
+   if(is.null(data[['@country']])) data[['@country']] <- NA
+   data <- data[['@country']] %>% as.data.frame
+   names(data) <- 'country'
+ 
+   return(data)
+ }
> 
> ## Apply json_to_dataframe to each cell of a column
> my_expand <- function(df, id, var) {
+   id <- enquo(id)
+   var <- enquo(var)
+   varname <- deparse(substitute(var))
+   
+   f <- function(row) {
+     #print(row[[get_name(id)]])
+     assert(class(row) == "list")
+     if(varname == '~SitesByCountries') data <- json_to_dataframe_geodata(row[[get_name(var)]])
+     else data <- json_to_dataframe(row[[get_name(var)]], varname)
+     if(nrow(data) > 0) data[[get_name(id)]] <- row[[get_name(id)]]
+     return(data)
+   }
+   
+   df %>%
+     select(!!id, !!var) %>%
+     filter(!is.na(!!var)) %>%
+     rowwise() %>%
+     do(f(.)) %>% 
+     ungroup
+ }
> 
> 
> 
> ## ------------------------------------------------------------------------------------------------ ##
> ##  Load data
> ## ------------------------------------------------------------------------------------------------ ##
> 
> ## Read in data
> options(stringsAsFactors = FALSE)
> 
> # Uncomment line below to load data without building from scratch
> #load('data/long_data.RData')
> 
> # Uncomment lines below to build from scratch
> in.data <- read_csv('data/trials.csv')
Parsed with column specification:
cols(
  id = col_integer(),
  BiomarkerNames = col_character(),
  CompaniesCollaborator = col_character(),
  CompaniesSponsor = col_character(),
  DateEnd = col_character(),
  DateStart = col_datetime(format = ""),
  FundersType = col_character(),
  Identifiers = col_character(),
  Indications = col_character(),
  PatientCountEnrollment = col_integer(),
  Phase = col_character(),
  RecruitmentStatus = col_character(),
  SitesByCountries = col_character(),
  TermsDesign = col_character(),
  TermsEndpoint = col_character(),
  AimsAndScope = col_character(),
  ProtocolDescription = col_character()
)
> nih_activity_codes <- read_csv('data/nih_activity_codes.csv')
Parsed with column specification:
cols(
  nih_activity_code = col_character()
)
> icd9_xwalk <- read_csv('data/Cortellis_Drug_Indication_ICD9_Crosswalk_Validated.csv')
Parsed with column specification:
cols(
  cortellis_condition = col_character(),
  icd9 = col_character(),
  icd9_category = col_character(),
  icd9_sub_chapter = col_character(),
  icd9_chapter = col_character(),
  malignant_not_specified = col_integer()
)
> load('data/temp/companies_mergedAncestors.RData')
> 
> # in.data <- read_csv('/Users/BBerger/Dropbox/Files_ClinTrials_Data/trials.csv')
> # in.data <- read_csv('../Files_ClinTrials_Data/trials.csv')
> # icd9_xwalk <- read_csv('../bkthruWork_local/indicationXwalk/data/Cortellis_Drug_Indication_ICD9_Crosswalk_Validated.csv')
> 
> 
> ## Pick sample index to test functions
> set.seed(101)
> sample_index <- sample(nrow(in.data), 1000)
> 
> ## Save dataframe of trials
> trials <-
+   in.data %>%
+   slice(sample_index) %>% #uncomment to test code on sample
+   rename(trial_id = id) %>% 
+   arrange(trial_id)
> 
> 
> 
> ## ------------------------------------------------------------------------------------------------ ##
> ## ------------------------------------------------------------------------------------------------ ##
> ##  Parse json columns as dataframes
> 
> ##  All _long data frames are in long form, i.e. trials are listed multiple times for each observation
> ## ------------------------------------------------------------------------------------------------ ##
> ## ------------------------------------------------------------------------------------------------ ##
> 
> # Companies
> collaborators_long <-
+   trials %>%
+   my_expand(trial_id, CompaniesCollaborator) %>%
+   rename(collaborator_company_id = `@id`, collaborator_company_name = `$`
+          ) %>% 
+   left_join(ancestor_data, by = c('collaborator_company_id' = 'cortellis_id')) %>% 
+   select(trial_id, collaborator_company_id, collaborator_company_name,
+          ancestor_permid, ancestor_permid_name,
+          ancestor_public, ancestor_ipo_date)
> 
> sponsors_long <-
+   trials %>%
+   my_expand(trial_id, CompaniesSponsor) %>%
+   rename(sponsor_company_id = `@id`, sponsor_company_name = `$`
+          ) %>% 
+   left_join(ancestor_data, by = c('sponsor_company_id' = 'cortellis_id')) %>% 
+   select(trial_id, sponsor_company_id, sponsor_company_name,
+          ancestor_permid, ancestor_permid_name,
+          ancestor_public, ancestor_ipo_date)
> 
> 
> options(tibble.width = Inf, tibble.print_min = 20)
> collaborators_long
# A tibble: 371 x 7
   trial_id collaborator_company_id                         collaborator_company_name ancestor_permid                              ancestor_permid_name ancestor_public   ancestor_ipo_date
      <int>                   <chr>                                             <chr>           <dbl>                                             <chr>           <dbl>              <dttm>
 1     4085                   14005                                      Alkermes plc      4295905472                                      Alkermes Inc               0                  NA
 2     5461                   19062                                  Pharmacopeia Inc      4295907009                        Ligand Pharmaceuticals Inc               1 1992-11-18 05:00:00
 3     6400                   17810                                    Eli Lilly & Co      4295904414                                  Eli Lilly and Co               1 1970-07-09 04:00:00
 4     9318                 1034843                               Kirin Pharma Co Ltd      5000002397                             Kirin Holdings Co Ltd               1 1949-05-16 04:00:00
 5    11283                 1071263                     Integrated Therapeutics Group      5000400153                 Integrated Therapeutics Group Inc               0                  NA
 6    11427                   21717                                       Actavis Inc      4295875158                Teva Pharmaceutical Industries Ltd               1 1951-01-01 05:00:00
 7    11655                   21113                     Long Island Jewish Med Center      5035556145                     Long Island Jewish Med Center               0                  NA
 8    11989                   19446                                  Roche Holding AG      4295890594                                  Roche Holding AG               1 2001-05-04 04:00:00
 9    12270                   26061                        Idenix Pharmaceuticals Inc      4295904886                                    Merck & Co Inc               1 1946-06-15 04:00:00
10    13410                 1073245      NIH AIDS Clinical Trials Information Service              NA                                              <NA>              NA                  NA
11    13701                   20518                     National Institutes of Health      8589934522 United States of America, of Federal (Government)               0                  NA
12    13734                   20518                     National Institutes of Health      8589934522 United States of America, of Federal (Government)               0                  NA
13    14278                   16198                           Forest Laboratories Inc      5040050523                                      Allergan plc               1 2013-10-01 04:00:00
14    16953                 1043066                         Gates Malaria Partnership      5035544166                         Gates Malaria Partnership               0                  NA
15    16953                 1051066 National Institute for Medical Research, Tanzania      5035548450           National Institute for Medical Research               0                  NA
16    18990                   14109                                         Amgen Inc      4295905537                                         Amgen Inc               1 1987-05-01 04:00:00
17    19002                   24250                               St Louis University      4296678800                            Saint Louis University               0                  NA
18    19078                   16198                           Forest Laboratories Inc      5040050523                                      Allergan plc               1 2013-10-01 04:00:00
19    19395                   21153                 Otsuka America Pharmaceutical Inc      5000073379                            Otsuka Holdings Co Ltd               1 2010-12-15 05:00:00
20    21959                 1004419                         Aspreva International Ltd      4295890653                                   Vifor Pharma AG               1 2003-02-25 05:00:00
# ... with 351 more rows
> sponsors_long
# A tibble: 1,070 x 7
   trial_id sponsor_company_id                                        sponsor_company_name ancestor_permid                  ancestor_permid_name ancestor_public   ancestor_ipo_date
      <int>              <chr>                                                       <chr>           <dbl>                                 <chr>           <dbl>              <dttm>
 1     3130              23137                                                 Novartis AG      4295890628                           Novartis AG               1 2001-05-07 04:00:00
 2     3137              28355                                         GlaxoSmithKline plc      4295895781                   GlaxoSmithKline PLC               1 1972-05-22 04:00:00
 3     3176            1009547                                                      Sanofi      4295868215                             Sanofi SA               1 2002-07-01 04:00:00
 4     3646            1020619                                                  NITROX LLC      5000334798                            Nitrox Ltd               0                  NA
 5     3708              19449                                        Hoffmann-La Roche AG      4295890594                      Roche Holding AG               1 2001-05-04 04:00:00
 6     4085              14216                                  Amylin Pharmaceuticals Inc      4295894341                       AstraZeneca PLC               1 2007-09-21 04:00:00
 7     4085              17810                                              Eli Lilly & Co      4295904414                      Eli Lilly and Co               1 1970-07-09 04:00:00
 8     4515              18607                                        Cardiome Pharma Corp      4295861998                  Cardiome Pharma Corp               1                  NA
 9     4524            1073839 Otsuka Pharmaceutical Development and Commercialization Inc      5000073379                Otsuka Holdings Co Ltd               1 2010-12-15 05:00:00
10     4594              30201                                   Critical Therapeutics Inc      4296558863               Chiesi Farmaceutici SpA               0                  NA
11     4623              24334                                  Boston Children's Hospital      4295982344            Boston Children's Hospital               0                  NA
12     4733            1005640                                          ARCA Biopharma Inc      4295906742                    ARCA Biopharma Inc               1 2000-07-21 04:00:00
13     4733              30579                                                  Nuvelo Inc      4295906742                    ARCA Biopharma Inc               1 2000-07-21 04:00:00
14     4862              21048                                  Brigham & Women's Hospital      4296615285                Harvard Medical School               0                  NA
15     5035            1037337                                         Bispebjerg Hospital      5035544333              Copenhagen Hospital Corp               0                  NA
16     5141              19058                                               MannKind Corp      4295903432                         MannKind Corp               1 2004-07-28 04:00:00
17     5461              18723                                                Accelrys Inc      4295907629                           Biovia Corp               0                  NA
18     5850              23948                       Assistance Publique Hopitaux de Paris      4296543185 Assistance Publique Hopitaux de Paris               0                  NA
19     6000              26494                                           Sanofi-Synthelabo      4295868215                             Sanofi SA               1 2002-07-01 04:00:00
20     6130            1003983                                         Bayer HealthCare AG      4295869217                              Bayer AG               1 1997-11-28 05:00:00
# ... with 1,050 more rows
> 
> 
> # Indications and ICD-9 codes
> indications_long <-
+   trials %>%
+   my_expand(trial_id, Indications) %>%
+   rename(indication_id = `@id`, indication_name = `$`
+          ) %>% 
+   mutate(indication_name = tolower(indication_name)) 
> icd9_long <- 
+   indications_long %>% 
+   left_join(icd9_xwalk, by = c('indication_name' = 'cortellis_condition')) %>% 
+   select(trial_id, starts_with('icd9'), malignant_not_specified)
> 
> # Trial Identifiers and NIH funding
> identifiers_long <-
+   trials %>% 
+   my_expand(trial_id, Identifiers) %>% 
+   rename(trial_identifier_type = `@type`,
+          trial_identifier = `$`
+          )
> nih_long <- 
+   identifiers_long %>% 
+   mutate(trial_id_first3 = substring(trimws(trial_identifier), 1, 3)) %>% 
+   mutate(nih_funding = is.element(el = trial_id_first3, set = nih_activity_codes$nih_activity_code)) %>% 
+   select(trial_id, nih_funding) %>% 
+   group_by(trial_id) %>% 
+   summarize(nih_funding = any(nih_funding)
+             )
> # End dates
> date_ends_long <- 
+   trials %>% 
+   my_expand(trial_id, DateEnd) %>% 
+   rename(date_end_type = `@type`,
+          date_end = `$`
+          )
> # Trial design, endpoints, recruitment status
> trial_design_long <- 
+   trials %>% 
+   my_expand(trial_id, TermsDesign) %>% 
+   rename(trial_design = `~TermsDesign`
+          ) 
> trial_endpoints_long <- 
+   trials %>% 
+   my_expand(trial_id, TermsEndpoint) %>% 
+   rename(trial_endpoint = `~TermsEndpoint`
+          ) 
> trial_recruitment_long <- 
+   trials %>% 
+   my_expand(trial_id, RecruitmentStatus) %>% 
+   rename(recruitment_status = `$`) %>% 
+   select(-`@id`)
> 
> # Trial location (US v. non-US)
> #note: us_trial == TRUE when the US is listed as a trial site, and FALSE when it is not AND another country IS
> #trials in which no site is listed with location in the trials data do NOT appear in us_trials_long
> us_trials_long <- 
+   trials %>%
+   #slice(166378) %>% 
+   my_expand(trial_id, SitesByCountries) %>% 
+   mutate(us_trial = (country == 'US')) %>% 
+   ungroup %>% group_by(trial_id) %>% 
+   summarize(us_trial = any(us_trial))
> 
> 
> ################################
> # Load Trial biomarkers
> trial_biomarkers <- 
+   trials %>% 
+   my_expand(trial_id, BiomarkerNames) %>% 
+   rename(biomarker_id = `@id`,
+          biomarker_role = `@type`,
+          biomarker_name = `$`
+   ) %>% 
+   mutate(disease_marker        = grepl('disease', tolower(biomarker_role)),
+          toxic_marker          = grepl('toxic', tolower(biomarker_role)),
+          therapeutic_marker    = grepl('therapeutic', tolower(biomarker_role)),
+          not_determined_marker = grepl('not determined', tolower(biomarker_role)),
+          not_determined_marker = not_determined_marker | (!disease_marker & !toxic_marker & !therapeutic_marker)
+   )
> 
> save.image(file = 'data/long_data.RData')
> 
> 
> 
> # # Load detailed biomarker role data
> # biomarker_uses <- read_csv('data/July 31 Update/biomarker_uses.csv') 
> # roles <- 
> #   biomarker_uses %>% 
> #   select(biomarker_use_id,
> #          biomarker_id,
> #          ci_indication_id,
> #          biomarker,
> #          detailed_role = role
> #          ) %>% 
> #   group_by(biomarker_id, ci_indication_id) %>% 
> #   summarize(diagnosis_drole =                any(detailed_role == 'Diagnosis'), 
> #             diff_diagnosis_drole =           any(detailed_role == 'Differential Diagnosis'), 
> #             predict_resistance_drole =       any(detailed_role == 'Predicting Drug Resistance'), 
> #             predict_efficacy_drole =         any(detailed_role == 'Predicting Treatment Efficacy'),
> #             predict_toxicity_drole =         any(detailed_role == 'Predicting Treatment Toxicity'),
> #             screening_detail_drole =         any(detailed_role == 'Screening'), 
> #             selection_for_therapy_drole =    any(detailed_role == 'Selection for Therapy'),
> #             all_drole =                      any(detailed_role == 'All'),
> #             disease_profiling_drole =        any(detailed_role == 'Disease Profiling'),
> #             monitor_progression_drole =      any(detailed_role == 'Monitoring Disease Progression'),
> #             monitor_efficacy_drole =         any(detailed_role == 'Monitoring Treatment Efficacy'),
> #             monitor_toxicity_drole =         any(detailed_role == 'Monitoring Treatment Toxicity'),
> #             monitor_progression_drole =      any(detailed_role == 'Monitoring Disease Progression'),
> #             not_determined_drole =           any(detailed_role == 'Not Determined'),
> #             prognosis_drole =                any(detailed_role == 'Prognosis'),
> #             prognosis_riskstrat_drole =      any(detailed_role == 'Prognosis - Risk Stratification'),
> #             risk_factor_drole =              any(detailed_role == 'Risk Factor'),
> #             staging_drole =                  any(detailed_role == 'Staging'),
> #             toxicity_profiling_drole =       any(detailed_role == 'Toxicity Profiling')
> #             ) %>% 
> #   arrange(biomarker_id, ci_indication_id)
> # 
> # # Join biomarkers and indications, then match detailed role data to both
> # biomarkers_indications <- 
> #   trial_biomarkers %>% 
> #   left_join(indications_long, by = 'trial_id') %>% 
> #   mutate(indication_id = as.numeric(indication_id),
> #          biomarker_id = as.numeric(biomarker_id)) %>% 
> #   left_join(roles, by = c('biomarker_id', 'indication_id' = 'ci_indication_id')) %>% 
> #   select(trial_id, indication_id, biomarker_id,  everything() ) 
> # 
> # # Match biomarker type data
> # biomarker_types <- read_csv('data/July 31 Update/biomarkers.csv')
> # types <- 
> #   biomarker_types %>%
> #   my_expand(id, BiomarkerTypes) %>% 
> #   rename(biomarker_id = id,
> #          biomarker_type = `~BiomarkerTypes`) %>% 
> #   arrange(biomarker_id)
> # # To reshape biomarker types long to wide 
> # reshape_types <- function(df) {
> #   df %>% 
> #     group_by(biomarker_id) %>% 
> #     mutate(i = 1:n()) %>% 
> #     mutate(i = as.character(sprintf("%03d", i))) %>% 
> #     ungroup %>% 
> #     select(biomarker_id, everything()) %>% 
> #     gather(key, value, -c(i, biomarker_id)) %>% 
> #     unite(key_i, c(key, i)) %>% 
> #     spread(key_i, value)
> # }
> # types <- reshape_types(types)
> # 
> # biomarker_data <-
> #   biomarkers_indications %>%
> #   left_join(types, by = 'biomarker_id')
> 
> # save(file = 'data/biomarker_data_08-13-17.RData', biomarker_data)
> # write_csv(biomarker_data, 'data/biomarker_data_08-13-17.csv')
> # write_dta(biomarker_data, 'data/biomarker_data_08-13-17.dta', version = 12)
> 
> 
> 
> proc.time()
   user  system elapsed 
 91.384   1.198  96.054 
