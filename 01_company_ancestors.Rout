
R version 3.4.1 (2017-06-30) -- "Single Candle"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## ------------------------------------------------------------------------------------------------ ##
> ## ------------------------------------------------------------------------------------------------ ##
> ## 03_companies.R ; Author: Ben Berger;                               
> ##
> ## Joins company "ancestor" data to company data.
> ##
> ## ------------------------------------------------------------------------------------------------ ##
> ## ------------------------------------------------------------------------------------------------ ##
> 
> rm(list = ls())
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(readr)
> library(haven)
> 
> data <-
+   read_csv(file = 'data/companies.csv',
+            col_types =  cols(cortellis_id = col_character())
+            )
> 
> # Make data frame of all companies
> companies <-
+   data %>% 
+   select(cortellis_id, cortellis_name, permid, ancestor_name, public, ipo_date, permid_name)
> 
> 
> # We exploit the fact that ancestors are just a subset of all companies
> # Make data frame of all potential ancestors (this is the same as companies, but with different variable names)
> ancestors <- companies %>% select(-ancestor_name) %>% rename(name = cortellis_name)
> 
> # Rename ancestor columns to begin with "ancestor_"
> f <- function(x) paste0('ancestor_', x)
> names(ancestors) <- sapply(names(ancestors), f)
> 
> # Merge together by cortellis ancestor name
> ancestor_data <-
+   companies %>% 
+   left_join(ancestors, by = 'ancestor_name')
> 
> # Write to disk
> save(ancestor_data, file = 'data/temp/companies_mergedAncestors.RData')
> 
> 
> 
> # write_dta(ancestor_data, path = 'data/companies_mergedAncestors.dta')
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 21.057   0.706  22.752 
